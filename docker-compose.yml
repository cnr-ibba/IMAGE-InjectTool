
# Create a composed Django-Postgres-NGINX instance
db:
  # get the latest postgres server
  image: postgres:9.6

  # Set db environment
  environment:
    # these passwords will be taken from .env file (not tracked in GIT)
    POSTGRES_PASSWORD: $PGPASSWORD
    PGPASSWORD: $PGPASSWORD
    IMAGE_USER: $IMAGE_USER
    IMAGE_PASSWORD: $IMAGE_PASSWORD
    CRYOWEB_INSERT_ONLY_PW: $CRYOWEB_INSERT_ONLY_PW

  # to export volume, as recommeded in https://registry.hub.docker.com/u/library/mysql/
  volumes:
    - "./postgres-data:/var/lib/postgresql/data"
    - "/etc/localtime:/etc/localtime:ro"
    # all scripts and sql file inside this directory will be executed after database initialization
    - "./postgres/:/docker-entrypoint-initdb.d/"

  ports:
    - "25432:5432"


redis:
  image: "redis:alpine"


uwsgi:
  # a custom image for django
  build: ./uwsgi

  # exec a different command from image
  command: uwsgi --ini /var/uwsgi/image_uwsgi.ini --memory-report

  # set working dir for uwsgi
  working_dir: /var/uwsgi/image/

  # define volumes
  volumes:
    - "./django-data/:/var/uwsgi/"
    - "./.git/:/var/uwsgi/.git/:ro"
    - "/etc/localtime:/etc/localtime:ro"

  # Expose the default port

  # link container to database
  links:
    - db


celery-worker:
  # the same django image of uwsgi
  build: ./uwsgi

  # exec a different command uwsgi
  command: celery -A image worker -l info -E --pidfile /var/run/celery.pid

  # set working dir for uwsgi
  working_dir: /var/uwsgi/image/

  # define volumes
  volumes:
    - "./django-data/:/var/uwsgi/"
    - "/etc/localtime:/etc/localtime:ro"

  # Expose the default port

  # link container to database
  links:
    - db
    - redis


celery-beat:
  # the same django image of uwsgi
  build: ./uwsgi

  command: celery -A image beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile /var/run/celerybeat.pid

  # set working dir for uwsgi
  working_dir: /var/uwsgi/image/

  # define volumes
  volumes:
    - "./django-data/:/var/uwsgi/"
    - "/etc/localtime:/etc/localtime:ro"

  # Expose the default port

  # link container to database
  links:
    - db
    - redis


celery-flower:
  # the same django image of uwsgi
  build: ./uwsgi

  command: celery -A image flower --port=5555 --loglevel=info # --persistent=True

  # set working dir for uwsgi
  working_dir: /var/uwsgi/image/

  # define volumes
  volumes:
    - "./django-data/:/var/uwsgi/"
    - "/etc/localtime:/etc/localtime:ro"

  # Expose flower port
  # TODO: serve this using nginx under authentication
  ports:
    - "5555:5555"

  # link container to database
  links:
    - db
    - redis


nginx:
  # a custom image for NGINX
  build: ./nginx

  volumes:
    - "/etc/localtime:/etc/localtime:ro"
    - "./nginx/conf.d/:/etc/nginx/conf.d/"

  # get volumes from uwsgi
  volumes_from:
    - uwsgi

  ports:
    - "26080:80"

  # link container uwsgi
  links:
    - uwsgi
