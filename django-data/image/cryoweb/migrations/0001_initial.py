# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-01-25 11:34
from __future__ import unicode_literals

import cryoweb.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('db_animal', models.IntegerField(blank=True, null=True, unique=True)),
                ('db_sire', models.IntegerField(blank=True, null=True)),
                ('db_dam', models.IntegerField(blank=True, null=True)),
                ('db_sex', models.IntegerField(blank=True, null=True)),
                ('db_breed', models.IntegerField(blank=True, null=True)),
                ('db_species', models.IntegerField(blank=True, null=True)),
                ('birth_dt', models.DateField(blank=True, null=True)),
                ('birth_year', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('image_id', models.IntegerField(blank=True, null=True)),
                ('db_org', models.IntegerField(blank=True, null=True)),
                ('la_rep', models.TextField(blank=True, null=True)),
                ('la_rep_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('db_hybrid', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('file_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'animal',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArConstraints',
            fields=[
                ('cons_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('cons_name', models.TextField(blank=True, null=True)),
                ('cons_type', models.TextField(blank=True, null=True)),
                ('cons_desc', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_constraints',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArDbtdescriptors',
            fields=[
                ('descriptor_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('descriptor_name', models.TextField(blank=True, null=True)),
                ('descriptor_value', models.TextField(blank=True, null=True)),
                ('descriptor_desc', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_dbtdescriptors',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArDbtpolicies',
            fields=[
                ('dbtpolicy_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('table_id', models.IntegerField(blank=True, null=True)),
                ('descriptor_id', models.IntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_dbtpolicies',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArDbttables',
            fields=[
                ('table_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('table_name', models.TextField(blank=True, null=True)),
                ('table_columns', models.TextField(blank=True, null=True)),
                ('table_desc', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_dbttables',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArRoleConstraints',
            fields=[
                ('cons_id', models.IntegerField(blank=True, null=True)),
                ('first_role_id', models.IntegerField(blank=True, null=True)),
                ('second_role_id', models.IntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_role_constraints',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArRoleDbtpolicies',
            fields=[
                ('role_id', models.IntegerField(blank=True, null=True)),
                ('dbtpolicy_id', models.IntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_role_dbtpolicies',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArRoles',
            fields=[
                ('role_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('role_name', models.TextField(blank=True, null=True)),
                ('role_long_name', models.TextField(blank=True, null=True)),
                ('role_type', models.TextField(blank=True, null=True)),
                ('role_subset', models.TextField(blank=True, null=True)),
                ('role_descr', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_roles',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArRoleStpolicies',
            fields=[
                ('role_id', models.IntegerField(blank=True, null=True)),
                ('stpolicy_id', models.IntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_role_stpolicies',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArStpolicies',
            fields=[
                ('stpolicy_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('stpolicy_name', models.TextField(blank=True, null=True)),
                ('stpolicy_type', models.TextField(blank=True, null=True)),
                ('stpolicy_desc', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_stpolicies',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArUserRoles',
            fields=[
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('role_id', models.IntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_user_roles',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArUsers',
            fields=[
                ('user_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('user_login', models.TextField(blank=True, null=True, unique=True)),
                ('user_password', models.TextField(blank=True, null=True)),
                ('user_language_id', models.IntegerField(blank=True, null=True)),
                ('user_marker', models.TextField(blank=True, null=True)),
                ('user_disabled', models.NullBooleanField()),
                ('user_status', models.NullBooleanField()),
                ('user_last_login', models.DateTimeField(blank=True, null=True)),
                ('user_last_activ_time', models.TimeField(blank=True, null=True)),
                ('user_session_id', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_users',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ArUsersData',
            fields=[
                ('user_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('user_first_name', models.TextField(blank=True, null=True)),
                ('user_second_name', models.TextField(blank=True, null=True)),
                ('user_institution', models.TextField(blank=True, null=True)),
                ('user_email', models.TextField(blank=True, null=True)),
                ('user_country', models.TextField(blank=True, null=True)),
                ('user_street', models.TextField(blank=True, null=True)),
                ('user_town', models.TextField(blank=True, null=True)),
                ('user_zip', models.TextField(blank=True, null=True)),
                ('user_other_info', models.TextField(blank=True, null=True)),
                ('opening_dt', models.DateField(blank=True, null=True)),
                ('closing_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('creation_dt', models.DateTimeField(blank=True, null=True)),
                ('creation_user', models.TextField(blank=True, null=True)),
                ('end_dt', models.DateTimeField(blank=True, null=True)),
                ('end_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'ar_users_data',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Blobs',
            fields=[
                ('blob_id', models.IntegerField(blank=True, null=True)),
                ('blob', models.BinaryField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('db_mimetype', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blobs',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BreedsSpecies',
            fields=[
                ('breed_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('db_breed', models.IntegerField(blank=True, null=True)),
                ('db_species', models.IntegerField(blank=True, null=True)),
                ('efabis_mcname', models.TextField(blank=True, null=True)),
                ('efabis_species', models.TextField(blank=True, null=True)),
                ('efabis_country', models.TextField(blank=True, null=True)),
                ('efabis_lang', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'breeds_species',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Codes',
            fields=[
                ('ext_code', models.TextField(blank=True, null=True)),
                ('class_field', models.TextField(blank=True, db_column='class', null=True)),
                ('db_code', models.IntegerField(blank=True, null=True, unique=True)),
                ('short_name', models.TextField(blank=True, null=True)),
                ('long_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('opening_dt', models.DateField(blank=True, null=True)),
                ('closing_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'codes',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('db_contact', models.IntegerField(blank=True, null=True, unique=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('salutation', models.TextField(blank=True, null=True)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('second_name', models.TextField(blank=True, null=True)),
                ('third_name', models.TextField(blank=True, null=True)),
                ('birth_dt', models.DateField(blank=True, null=True)),
                ('db_language', models.IntegerField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('town', models.TextField(blank=True, null=True)),
                ('db_country', models.IntegerField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('phone2', models.TextField(blank=True, null=True)),
                ('fax', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('bank_name', models.TextField(blank=True, null=True)),
                ('bank_zip', models.TextField(blank=True, null=True)),
                ('account', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('opening_dt', models.DateField(blank=True, null=True)),
                ('closing_dt', models.DateField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contacts',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.IntegerField(blank=True, null=True)),
                ('db_event_type', models.IntegerField(blank=True, null=True)),
                ('db_sampler', models.IntegerField(blank=True, null=True)),
                ('event_dt', models.DateField(blank=True, null=True)),
                ('db_location', models.IntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Inspool',
            fields=[
                ('ds', models.TextField(blank=True, null=True)),
                ('record_seq', models.IntegerField(blank=True, null=True, unique=True)),
                ('in_date', models.DateField(blank=True, null=True)),
                ('ext_unit', models.IntegerField(blank=True, null=True)),
                ('proc_dt', models.DateField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('record', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'inspool',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='InspoolErr',
            fields=[
                ('record_seq', models.IntegerField(blank=True, null=True)),
                ('err_type', models.TextField(blank=True, null=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('dbtable', models.TextField(blank=True, null=True)),
                ('dbcol', models.TextField(blank=True, null=True)),
                ('err_source', models.TextField(blank=True, null=True)),
                ('short_msg', models.TextField(blank=True, null=True)),
                ('long_msg', models.TextField(blank=True, null=True)),
                ('ext_col', models.TextField(blank=True, null=True)),
                ('ext_val', models.TextField(blank=True, null=True)),
                ('mod_val', models.TextField(blank=True, null=True)),
                ('comp_val', models.TextField(blank=True, null=True)),
                ('target_col', models.TextField(blank=True, null=True)),
                ('ds', models.TextField(blank=True, null=True)),
                ('ext_unit', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('err_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'inspool_err',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('lang_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('iso_lang', models.TextField(blank=True, null=True, unique=True)),
                ('lang', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('creation_dt', models.DateTimeField(blank=True, null=True)),
                ('creation_user', models.TextField(blank=True, null=True)),
                ('end_dt', models.DateTimeField(blank=True, null=True)),
                ('end_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'languages',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LoadStat',
            fields=[
                ('ds', models.TextField(blank=True, null=True)),
                ('job_start', models.DateTimeField(blank=True, null=True)),
                ('job_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('rec_tot_no', models.SmallIntegerField(blank=True, null=True)),
                ('rec_err_no', models.SmallIntegerField(blank=True, null=True)),
                ('rec_ok_no', models.SmallIntegerField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'load_stat',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('db_animal', models.IntegerField(blank=True, null=True)),
                ('db_location', models.IntegerField(blank=True, null=True)),
                ('entry_dt', models.DateField(blank=True, null=True)),
                ('db_entry_action', models.IntegerField(blank=True, null=True)),
                ('exit_dt', models.DateField(blank=True, null=True)),
                ('db_exit_action', models.IntegerField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Movements',
            fields=[
                ('movements_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('from_storage', models.IntegerField(blank=True, null=True)),
                ('to_storage', models.IntegerField(blank=True, null=True)),
                ('no_units', models.SmallIntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('action_dt', models.DateTimeField(blank=True, null=True)),
                ('action_type', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movements',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NewPest',
            fields=[
                ('class_field', models.TextField(blank=True, db_column='class', null=True)),
                ('key', models.TextField(blank=True, null=True)),
                ('trait', models.TextField(blank=True, null=True)),
                ('estimator', models.FloatField(blank=True, null=True)),
                ('pev', models.FloatField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'new_pest',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Nodes',
            fields=[
                ('nodename', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'nodes',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Protocols',
            fields=[
                ('protocol_id', models.IntegerField(blank=True, null=True)),
                ('protocol_name', models.TextField(blank=True, null=True)),
                ('db_material_type', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'protocols',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sources',
            fields=[
                ('source', models.TextField(blank=True, null=True)),
                ('tablename', models.TextField(blank=True, null=True)),
                ('class_field', models.TextField(blank=True, db_column='class', null=True)),
                ('columnnames', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'sources',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StatusChanges',
            fields=[
                ('status_change_id', models.IntegerField(blank=True, null=True)),
                ('vessels_storage_id', models.IntegerField(blank=True, null=True)),
                ('old_status', models.IntegerField(blank=True, null=True)),
                ('new_status', models.IntegerField(blank=True, null=True)),
                ('action_dt', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'status_changes',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('storage_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('storage_name', models.TextField(blank=True, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'storage',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='StorageHistory',
            fields=[
                ('storage_id', models.IntegerField(blank=True, null=True)),
                ('old_storage_name', models.TextField(blank=True, null=True)),
                ('new_storage_name', models.TextField(blank=True, null=True)),
                ('old_parent_id', models.IntegerField(blank=True, null=True)),
                ('new_parent_id', models.IntegerField(blank=True, null=True)),
                ('old_comment', models.TextField(blank=True, null=True)),
                ('new_comment', models.TextField(blank=True, null=True)),
                ('action_type', models.TextField(blank=True, null=True)),
                ('action_date', models.DateField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'storage_history',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Targets',
            fields=[
                ('target', models.TextField(blank=True, null=True)),
                ('tablename', models.TextField(blank=True, null=True)),
                ('class_field', models.TextField(blank=True, db_column='class', null=True)),
                ('columnnames', models.TextField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'targets',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('db_animal', models.IntegerField(blank=True, null=True)),
                ('ext_animal', models.TextField(blank=True, null=True)),
                ('db_unit', models.IntegerField(blank=True, null=True)),
                ('id_set', models.IntegerField(blank=True, null=True)),
                ('opening_dt', models.DateField(blank=True, null=True)),
                ('closing_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'transfer',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('db_unit', models.IntegerField(blank=True, null=True, unique=True)),
                ('ext_unit', models.TextField(blank=True, null=True)),
                ('ext_id', models.TextField(blank=True, null=True)),
                ('db_contact', models.IntegerField(blank=True, null=True)),
                ('db_member', models.IntegerField(blank=True, null=True)),
                ('opening_dt', models.DateField(blank=True, null=True)),
                ('closing_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'db_table': 'unit',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VAnimal',
            fields=[
                ('v_guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('db_animal', models.IntegerField(blank=True, null=True, unique=True)),
                ('ext_animal', models.TextField(blank=True, null=True)),
                ('db_sire', models.IntegerField(blank=True, null=True)),
                ('ext_sire', models.TextField(blank=True, null=True)),
                ('db_dam', models.IntegerField(blank=True, null=True)),
                ('ext_dam', models.TextField(blank=True, null=True)),
                ('db_sex', models.IntegerField(blank=True, null=True)),
                ('ext_sex', models.TextField(blank=True, null=True)),
                ('db_breed', models.IntegerField(blank=True, null=True)),
                ('ext_breed', models.TextField(blank=True, null=True)),
                ('db_species', models.IntegerField(blank=True, null=True)),
                ('ext_species', models.TextField(blank=True, null=True)),
                ('birth_dt', models.DateField(blank=True, null=True)),
                ('birth_year', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('image_id', models.IntegerField(blank=True, null=True)),
                ('db_org', models.IntegerField(blank=True, null=True)),
                ('ext_org', models.TextField(blank=True, null=True)),
                ('la_rep', models.TextField(blank=True, null=True)),
                ('la_rep_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('db_hybrid', models.IntegerField(blank=True, null=True)),
                ('ext_hybrid', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Animal View',
                'db_table': 'v_animal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VBreedsSpecies',
            fields=[
                ('v_guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('breed_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('db_breed', models.IntegerField(blank=True, null=True)),
                ('ext_breed', models.TextField(blank=True, null=True)),
                ('db_species', models.IntegerField(blank=True, null=True)),
                ('ext_species', models.TextField(blank=True, null=True)),
                ('efabis_mcname', models.TextField(blank=True, null=True)),
                ('efabis_species', models.TextField(blank=True, null=True)),
                ('efabis_country', models.TextField(blank=True, null=True)),
                ('efabis_lang', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Breeds Species View',
                'db_table': 'v_breeds_species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vessels',
            fields=[
                ('db_vessel', models.IntegerField(blank=True, null=True, unique=True)),
                ('ext_vessel', models.TextField(blank=True, null=True, unique=True)),
                ('db_animal', models.IntegerField(blank=True, null=True)),
                ('protocol_id', models.IntegerField(blank=True, null=True)),
                ('production_dt', models.DateField(blank=True, null=True)),
                ('freezing_dt', models.DateField(blank=True, null=True)),
                ('db_vessel_type', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
                ('db_contributor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vessels',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VesselsStorage',
            fields=[
                ('vessels_storage_id', models.IntegerField(blank=True, null=True)),
                ('db_vessel', models.IntegerField(blank=True, null=True)),
                ('storage_id', models.IntegerField(blank=True, null=True)),
                ('no_units', models.SmallIntegerField(blank=True, null=True)),
                ('db_status', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vessels_storage',
                'managed': False,
            },
            bases=(cryoweb.models.BaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='VProtocols',
            fields=[
                ('v_guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('protocol_id', models.IntegerField(blank=True, null=True)),
                ('protocol_name', models.TextField(blank=True, null=True)),
                ('db_material_type', models.IntegerField(blank=True, null=True)),
                ('ext_material_type', models.TextField(blank=True, null=True, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Protocols View',
                'db_table': 'v_protocols',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VTransfer',
            fields=[
                ('v_guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('db_animal', models.IntegerField(blank=True, null=True, unique=True)),
                ('ext_animal', models.TextField(blank=True, null=True)),
                ('db_unit', models.IntegerField(blank=True, null=True)),
                ('ext_unit', models.TextField(blank=True, null=True)),
                ('id_set', models.IntegerField(blank=True, null=True)),
                ('ext_id_set', models.TextField(blank=True, null=True)),
                ('opening_dt', models.DateField(blank=True, null=True)),
                ('closing_dt', models.DateField(blank=True, null=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('guid', models.IntegerField(primary_key=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
            ],
            options={
                'verbose_name': 'Transfer View',
                'db_table': 'v_transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VVessels',
            fields=[
                ('v_guid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('db_vessel', models.IntegerField(blank=True, null=True, unique=True)),
                ('ext_vessel', models.TextField(blank=True, null=True, unique=True)),
                ('db_animal', models.IntegerField(blank=True, null=True)),
                ('ext_animal', models.TextField(blank=True, null=True, unique=True)),
                ('protocol_id', models.IntegerField(blank=True, null=True)),
                ('ext_protocol_id', models.IntegerField(blank=True, null=True)),
                ('production_dt', models.DateField(blank=True, null=True)),
                ('freezing_dt', models.DateField(blank=True, null=True)),
                ('db_vessel_type', models.IntegerField(blank=True, null=True)),
                ('ext_vessel_type', models.TextField(blank=True, null=True, unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chk_lvl', models.SmallIntegerField(blank=True, null=True)),
                ('dirty', models.NullBooleanField()),
                ('guid', models.BigIntegerField(primary_key=True)),
                ('last_change_dt', models.DateTimeField(blank=True, null=True)),
                ('last_change_user', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('synch', models.NullBooleanField()),
                ('version', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Vessels View',
                'db_table': 'v_vessels',
                'managed': False,
            },
        ),
    ]
